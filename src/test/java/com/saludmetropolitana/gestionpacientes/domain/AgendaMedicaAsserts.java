package com.saludmetropolitana.gestionpacientes.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgendaMedicaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaMedicaAllPropertiesEquals(AgendaMedica expected, AgendaMedica actual) {
        assertAgendaMedicaAutoGeneratedPropertiesEquals(expected, actual);
        assertAgendaMedicaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaMedicaAllUpdatablePropertiesEquals(AgendaMedica expected, AgendaMedica actual) {
        assertAgendaMedicaUpdatableFieldsEquals(expected, actual);
        assertAgendaMedicaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaMedicaAutoGeneratedPropertiesEquals(AgendaMedica expected, AgendaMedica actual) {
        assertThat(expected)
            .as("Verify AgendaMedica auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaMedicaUpdatableFieldsEquals(AgendaMedica expected, AgendaMedica actual) {
        assertThat(expected)
            .as("Verify AgendaMedica relevant properties")
            .satisfies(e -> assertThat(e.getFechaHora()).as("check fechaHora").isEqualTo(actual.getFechaHora()))
            .satisfies(e -> assertThat(e.getPacienteID()).as("check pacienteID").isEqualTo(actual.getPacienteID()))
            .satisfies(e -> assertThat(e.getMedicoID()).as("check medicoID").isEqualTo(actual.getMedicoID()))
            .satisfies(e -> assertThat(e.getCentroSaludID()).as("check centroSaludID").isEqualTo(actual.getCentroSaludID()))
            .satisfies(e -> assertThat(e.getEstadoHora()).as("check estadoHora").isEqualTo(actual.getEstadoHora()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaMedicaUpdatableRelationshipsEquals(AgendaMedica expected, AgendaMedica actual) {
        assertThat(expected)
            .as("Verify AgendaMedica relationships")
            .satisfies(e -> assertThat(e.getPacienteHora()).as("check pacienteHora").isEqualTo(actual.getPacienteHora()))
            .satisfies(e -> assertThat(e.getHorasMedicas()).as("check horasMedicas").isEqualTo(actual.getHorasMedicas()))
            .satisfies(e -> assertThat(e.getHorasCentroSalud()).as("check horasCentroSalud").isEqualTo(actual.getHorasCentroSalud()));
    }
}
