package com.saludmetropolitana.gestionpacientes.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MedicosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicosAllPropertiesEquals(Medicos expected, Medicos actual) {
        assertMedicosAutoGeneratedPropertiesEquals(expected, actual);
        assertMedicosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicosAllUpdatablePropertiesEquals(Medicos expected, Medicos actual) {
        assertMedicosUpdatableFieldsEquals(expected, actual);
        assertMedicosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicosAutoGeneratedPropertiesEquals(Medicos expected, Medicos actual) {
        assertThat(expected)
            .as("Verify Medicos auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicosUpdatableFieldsEquals(Medicos expected, Medicos actual) {
        assertThat(expected)
            .as("Verify Medicos relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getApellido()).as("check apellido").isEqualTo(actual.getApellido()))
            .satisfies(e -> assertThat(e.getEspecialidad()).as("check especialidad").isEqualTo(actual.getEspecialidad()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicosUpdatableRelationshipsEquals(Medicos expected, Medicos actual) {
        // empty method
    }
}
